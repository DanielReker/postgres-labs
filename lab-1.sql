-- Лабораторная работа 1 (глава 3)



-- Задание 1

-- Текст задания:
-- Попробуйте ввести в таблицу aircrafts строку с таким значением атрибута
-- «Код самолета» (aircraft_code), которое вы уже вводили, например:
-- INSERT INTO aircrafts
-- VALUES ( 'SU9', 'Sukhoi SuperJet-100', 3000 );
-- Обратите внимание, что в этой команде мы не привели список атрибутов, что
-- вполне допустимо при задании значений атрибутов в том же порядке, в котором
-- атрибуты следуют в определении таблицы. Но в ваших прикладных программах
-- так поступать все же не следует, поскольку в случае возможной реструктуризации таблицы и изменения порядка следования атрибутов в ней ваши команды
-- INSERT могут перестать работать корректно.
-- Вы получите сообщение об ошибке.
-- ОШИБКА: повторяющееся значение ключа нарушает ограничение
-- уникальности "aircrafts_pkey"
-- ПОДРОБНОСТИ: Ключ "(aircraft_code)=(SU9)" уже существует.
-- Подумайте, почему появилось сообщение. Если вы забыли структуру таблицы
-- aircrafts, то можно вывести ее определение на экран с помощью команды
-- \d aircrafts

INSERT INTO aircrafts_data VALUES ( 'SU9', '{"en": "Sukhoi SuperJet-100", "ru": "Сухой СуперДжет-100"}', 3000 );

-- Вывод:
-- ERROR:  duplicate key value violates unique constraint "aircrafts_pkey"
-- DETAIL:  Key (aircraft_code)=(SU9) already exists.

-- Поскольку в таблице aircrafts_data уже присутствует запись с aircraft_code = 'SU9',
-- и при этом aircraft_code является первичным ключом и, соответственно, записей с каждым значением такого ключа
-- должно быть не больше 1, мы получаем сообщение об ошибке, сообщающее нам о том, что нарушается ограничение
-- уникальности aircraft_pkey






-- Задание 2

-- Текст задания:
-- Предложение ORDER BY команды SELECT позволяет отсортировать данные при
-- выводе. По умолчанию сортировка выполняется по возрастанию значений атрибута, указанного в этом предложении. Но можно упорядочить строки и по
-- убыванию значения атрибута. Для этого нужно после имени атрибута в предложении ORDER BY добавить ключевое слово DESC (это сокращение от слова
-- descendant — убывающий порядок). Самостоятельно напишите команду для выборки всех строк из таблицы aircrafts, чтобы строки были упорядочены по убыванию значения атрибута «Максимальная дальность полета, км» (range).

SELECT * FROM aircrafts_data ORDER BY range DESC;

-- Вывод:
--  aircraft_code |                           model                            | range
-- ---------------+------------------------------------------------------------+-------
--  773           | {"en": "Boeing 777-300", "ru": "Боинг 777-300"}            | 11100
--  763           | {"en": "Boeing 767-300", "ru": "Боинг 767-300"}            |  7900
--  319           | {"en": "Airbus A319-100", "ru": "Аэробус A319-100"}        |  6700
--  320           | {"en": "Airbus A320-200", "ru": "Аэробус A320-200"}        |  5700
--  321           | {"en": "Airbus A321-200", "ru": "Аэробус A321-200"}        |  5600
--  733           | {"en": "Boeing 737-300", "ru": "Боинг 737-300"}            |  4200
--  SU9           | {"en": "Sukhoi Superjet-100", "ru": "Сухой Суперджет-100"} |  3000
--  CR2           | {"en": "Bombardier CRJ-200", "ru": "Бомбардье CRJ-200"}    |  2700
--  CN1           | {"en": "Cessna 208 Caravan", "ru": "Сессна 208 Караван"}   |  1200
-- (9 rows)

-- Как мы видим, записи действительно отсортированы по убыванию значения range (11100 > 7900 > 6700 > ... > 1200)





-- Задание 3

-- Текст задания:
-- Команда UPDATE позволяет в процессе обновления выполнять арифметические
-- действия над значениями, находящимися в строках таблицы. Представим себе,
-- что двигатели самолета Sukhoi SuperJet стали в два раза экономичнее, вследствие чего дальность полета этого лайнера возросла ровно в два раза. Команда
-- UPDATE позволяет увеличить значение атрибута range в строке, хранящей информацию об этом самолете, даже не выполняя предварительно выборку с целью
-- выяснения текущего значения этого атрибута. При присваивании нового значения атрибуту range можно справа от знака «=» написать не только числовую константу,
-- но и целое выражение. В нашем случае оно будет простым:
-- range = range * 2. Самостоятельно напишите команду UPDATE полностью, при
-- этом не забудьте, что увеличить дальность полета нужно только у одной модели — Sukhoi SuperJet, поэтому необходимо использовать условие WHERE. Затем
-- с помощью команды SELECT проверьте полученный результат.

SELECT * FROM aircrafts_data;
UPDATE aircrafts_data SET range = range * 2 WHERE aircraft_code = 'SU9';
SELECT * FROM aircrafts_data;

-- Вывод:
--  aircraft_code |                           model                            | range
-- ---------------+------------------------------------------------------------+-------
--  773           | {"en": "Boeing 777-300", "ru": "Боинг 777-300"}            | 11100
--  763           | {"en": "Boeing 767-300", "ru": "Боинг 767-300"}            |  7900
--  SU9           | {"en": "Sukhoi Superjet-100", "ru": "Сухой Суперджет-100"} |  3000
--  320           | {"en": "Airbus A320-200", "ru": "Аэробус A320-200"}        |  5700
--  321           | {"en": "Airbus A321-200", "ru": "Аэробус A321-200"}        |  5600
--  319           | {"en": "Airbus A319-100", "ru": "Аэробус A319-100"}        |  6700
--  733           | {"en": "Boeing 737-300", "ru": "Боинг 737-300"}            |  4200
--  CN1           | {"en": "Cessna 208 Caravan", "ru": "Сессна 208 Караван"}   |  1200
--  CR2           | {"en": "Bombardier CRJ-200", "ru": "Бомбардье CRJ-200"}    |  2700
-- (9 rows)
--
-- UPDATE 1
--  aircraft_code |                           model                            | range
-- ---------------+------------------------------------------------------------+-------
--  773           | {"en": "Boeing 777-300", "ru": "Боинг 777-300"}            | 11100
--  763           | {"en": "Boeing 767-300", "ru": "Боинг 767-300"}            |  7900
--  320           | {"en": "Airbus A320-200", "ru": "Аэробус A320-200"}        |  5700
--  321           | {"en": "Airbus A321-200", "ru": "Аэробус A321-200"}        |  5600
--  319           | {"en": "Airbus A319-100", "ru": "Аэробус A319-100"}        |  6700
--  733           | {"en": "Boeing 737-300", "ru": "Боинг 737-300"}            |  4200
--  CN1           | {"en": "Cessna 208 Caravan", "ru": "Сессна 208 Караван"}   |  1200
--  CR2           | {"en": "Bombardier CRJ-200", "ru": "Бомбардье CRJ-200"}    |  2700
--  SU9           | {"en": "Sukhoi Superjet-100", "ru": "Сухой Суперджет-100"} |  6000
-- (9 rows)

-- Как мы видим, значение range у модели самолета "Sukhoi Superjet" (код SU9) действительно увеличилось в 2 раза
-- (с 3000 до 6000)







-- Задание 4

-- Текст задания:
-- Если в предложении WHERE команды DELETE вы укажете логически и синтаксически корректное условие, но строк, удовлетворяющих этому условию, в таблице не окажется, то в ответ СУБД выведет сообщение
-- DELETE 0
-- Такая ситуация не является ошибкой или сбоем в работе СУБД. Например, если после удаления какой-то строки вы повторно попытаетесь удалить ее же, то
-- получите именно такое сообщение.
-- Самостоятельно смоделируйте описанную ситуацию, подобрав условие, которому гарантированно не соответствует ни одна строка в таблице «Самолеты»
-- (aircrafts).

-- Попробуем, например, удалить все самолеты, у которых дальность больше 12000 км:
DELETE FROM aircrafts_data WHERE range > 12000;

-- Вывод:
-- DELETE 0

-- Действительно, как мы можем понять из задания 2, максимальная дальность самолета равна 11100 км, то есть нет
-- ни одного самолета с дальностью более 12000 км, поэтому при выполнении команды из таблицы было удалено 0 записей.